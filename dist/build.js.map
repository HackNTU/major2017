{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 5b5a0ae016b3f170a5fc","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/d3/build/d3.js","webpack:///./src/assets/logo/favicon.png","webpack:///(webpack)/buildin/global.js","webpack:///./~/vue-head/vue-head.js","webpack:///./src/App.vue","webpack:///./~/vue/dist/vue.esm.js","webpack:///App.vue","webpack:///cover.vue","webpack:///load.vue","webpack:///logo.vue","webpack:///tagNav.vue","webpack:///./src/main.js","webpack:///./src/components/cover.vue?4002","webpack:///./src/components/logo.vue?0341","webpack:///./src/components/load.vue?f267","webpack:///./src/components/tagNav.vue?036c","webpack:///./src/App.vue?8b80","webpack:///./src/assets/logo/logo-wb-m.png","webpack:///./~/lodash/lodash.js","webpack:///./src/components/cover.vue","webpack:///./src/components/load.vue","webpack:///./src/components/logo.vue","webpack:///./src/components/tagNav.vue","webpack:///./src/components/cover.vue?1206","webpack:///./src/components/logo.vue?7a4c","webpack:///./src/components/load.vue?e9af","webpack:///./src/components/tagNav.vue?ef04","webpack:///./src/App.vue?3358","webpack:///./src/components/cover.vue?ad1f","webpack:///./src/components/logo.vue?e910","webpack:///./src/components/load.vue?26e5","webpack:///./src/components/tagNav.vue?7a83","webpack:///./src/App.vue?0fe3","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","list","toString","result","this","length","item","push","join","mediaQuery","alreadyImportedModules","id","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","concat","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","css","media","sourceMap","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","hasDocument","DEBUG","Error","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","parentId","_isProduction","newList","mayRemove","textStore","replacement","filter","Boolean","global","factory","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","left","right","tickSizeOuter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","set","callback","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","datum","_next","_parent","bindIndex","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","constantNull","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","link$2","link","buffer","argv","slice$5","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","touches$$1","sublisteners","clickDistance","define","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","PI","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","eval","VueHead","Vue","$options","prop","util","$emit","destroy","undoTitle","diffTitle","undo","installed","opt","mixin","ready","destroyed","events","updateHead","created","$on","mounted","beforeDestroy","complement","title","separator","els","diffEls","shorthand","ch","tg","he","ip","getPlace","el","parentElement","prepareElement","sh","inner","isEqualNode","replaceChild","arr","tag","getElementById","hasAttribute","use","injectStyle","Component","__webpack_exports__","isUndef","isDef","isTrue","isFalse","isPrimitive","isObject","isPlainObject","_toString","isRegExp","val","String","toNumber","parseFloat","makeMap","str","expectsLowerCase","hasOwn","cached","fn","ctx","boundFn","_length","toArray","ret","_from","toObject","res","looseEqual","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","def","writable","parsePath","bailRE","handleError","err","vm","info","config","errorHandler","inBrowser","console","isNative","Ctor","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","getOwnPropertyDescriptor","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","props","camelize","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","hyphenate","getPropDefaultValue","prevShouldConvert","_props","getType","len","createTextVNode","VNode","cloneVNode","vnode","cloned","elm","componentOptions","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","normalizeEvent","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","resolve","reject","reason","then","component","getFirstComponentChild","initEvents","_events","_hasHookEvent","_parentListeners","updateComponentListeners","once$$1","$once","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","createEmptyVNode","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","resetSchedulerState","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdateHooks","devtools","queueActivatedComponent","queueWatcher","nextTick","traverse","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","initMethods","initData","computed","initComputed","watch","initWatch","propsOptions","isRoot","getData","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","$watch","initProvide","provide","_provided","initInjections","resolveInject","inject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","domProps","renderStatic","isInFor","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","plugin","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","getComponentName","pattern","pruneCache","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","query","selected","createElement$1","tagName","multiple","namespaceMap","createComment","newNode","referenceNode","setTextContent","registerRef","isRemoval","ref","refInFor","sameVnode","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","pushFilter","filters","lastFilterIndex","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","addProp","addAttr","addDirective","arg","addHandler","important","warn","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","idx","expressionPos","expressionEndPos","lastIndexOf","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","oldHandler","target$1","ev","remove$2","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","removeClass","tar","resolveTransition","def$$1","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","onEnd","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","toggleDisplay","_leaveCb","cancelled","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","setSelected","binding","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","WebkitTransform","transitionDuration","decode","decoder","decodeAttr","shouldDecodeNewlines","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","stackedTag","reStackedTag","reCache","endTagLength","rest","all","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","template","endPre","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","currentParent","preserveWhitespace","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","genForScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","cloneNode","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","isEdge","isAndroid","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","uid","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","expOrFn","deep","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","tmp","teardown","$mount","keepAlive","mountedNode","prepatch","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_q","_i","_m","_f","_b","_v","_e","_u","patternTypes","KeepAlive","include","exclude","builtInComponents","configDef","defineReactive","delete","testEl","acceptValue","math","isHTMLTag","nodeOps","hooks","baseModules","klass","listDelimiter","propertyDelimiter","cssVarRE","importantRE","normalizedName","normalize","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","isRenderedModule","isInitialPatch","isRealElement","oldElm","parentElm$1","vmodel","model$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","clone","platformComponents","content","encoded","div","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","regexEscapeRE","close","esc","tab","up","down","genGuard","prevent","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","baseOptions","ref$1","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","idToTemplate","mount","__WEBPACK_IMPORTED_MODULE_0__components_logo_vue__","__WEBPACK_IMPORTED_MODULE_0__components_logo_vue___default","__WEBPACK_IMPORTED_MODULE_1__components_tagNav_vue__","__WEBPACK_IMPORTED_MODULE_1__components_tagNav_vue___default","__WEBPACK_IMPORTED_MODULE_2__components_cover_vue__","__WEBPACK_IMPORTED_MODULE_2__components_cover_vue___default","__WEBPACK_IMPORTED_MODULE_3__components_load_vue__","__WEBPACK_IMPORTED_MODULE_3__components_load_vue___default","_this","loaded","finish","rel","href","sizes","Logo","TagNav","Cover","Load","d3_init","textAttr","ticked","resetCenter","textsZh","textsEn","innerWidth","innerHeight","centerX","centerY","__WEBPACK_IMPORTED_MODULE_0_d3__","zh","en","scrollTo","__WEBPACK_IMPORTED_MODULE_1_lodash__","__WEBPACK_IMPORTED_MODULE_1_lodash___default","ballAttr","ballTransition","ballp","ballg","tags","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vue_head__","__WEBPACK_IMPORTED_MODULE_1_vue_head___default","__WEBPACK_IMPORTED_MODULE_2__App_vue__","__WEBPACK_IMPORTED_MODULE_2__App_vue___default","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","addSetEntry","func","thisArg","arrayAggregator","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","escapeStringChar","stringEscapes","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","done","mapToArray","overArg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsMisc","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","hashClear","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","paths","skip","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","othLength","othIndex","caches","maxLength","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","baseUnset","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createPartial","toFinite","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","createToPairs","createWrap","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","message","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduceRight","negate","sample","sampleSize","curry","curryRight","debounce","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","spread","throttle","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isMaskable","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","unset","updateWith","valuesIn","inRange","floating","upperFirst","endsWith","escape","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","cond","conforms","defaultTo","matchesProperty","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","idCounter","maxBy","meanBy","minBy","sumBy","defaults","pick","funcProto","coreJsData","IE_PROTO","Buffer","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","quote","difference","differenceBy","differenceWith","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zipWith","wrapperAt","countBy","findLast","groupBy","invokeMap","keyBy","sortBy","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","eachRight","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","_vm","_h","locals","newStyles","part","webpackPolyfill","deprecate"],"mappings":"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GY9v1B1B,EZ8v1BmCD,KAM9B0kD,MAAM,SAAUm7D,EAA8C,YAAEF,EY9v1BrEC,IAAAl7D,MAAA,IAAAm7D,EAAA,UACAn7D,MAAA,IAAAm7D,EAAA,UAXAr4D,YAeA,IAAA9+D,GAAA,OACA22H,EZ2y1BEzxH,QAAO3E,iBAAiB,SAAU,WAChC2E,OAAOoyH,SAAS,EY9v1BpB,GACAV,IZ+v1BI56D,EAAMA,MAAM,SAAUm7D,EAA8C,YAAEF,EY7v1B1EC,MAIA,GZ4i1BA/mI,OAAOC,eAAeu+F,EAAqB,cAAgB7+F,OAAO,GAC7C,IAAIqnI,GAAmC/nI,EAAoB,GAEvDmoI,GAD2CnoI,EAAoBoB,EAAE2mI,GAC1B/nI,EAAoB,KAC3DooI,EAA+CpoI,EAAoBoB,EAAE+mI,EYvx1B9F5oC,GAAA,SZky1BE3+F,KYhy1BF,QZiy1BEg9F,QAAS,WACPypC,EAAQtlI,KYhy1BZuqG,MZky1BErgG,KAAM,WACJ,OACEgxG,IY/x1BN,aASA,IAAAhxG,GAAAm8H,EAAAz/H,EAAAkpD,UZgy1BEm2E,GY9x1BF,OZ+x1BEC,GY9x1BF,2BZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,4BZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,gBZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,uBZgy1BED,GY9x1BF,KZ+x1BEC,GY9x1BF,gBZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,sBZgy1BED,GY9x1BF,MZ+x1BEC,GY9x1BF,yBZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,oBZgy1BED,GY9x1BF,MZ+x1BEC,GY9x1BF,eZgy1BED,GY9x1BF,QZ+x1BEC,GY9x1BF,yBZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,yBZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,8BZgy1BED,GY9x1BF,OZ+x1BEC,GY9x1BF,sBZgy1BED,GY9x1BF,KZ+x1BEC,GY9x1BF,gBZgy1BED,GY9x1BF,KZ+x1BEC,GY9x1BF,cAEAh8H,GAAAwhD,SZgy1BEu6E,GY9x1BF,KZ+x1BEC,GY9x1BF,cZk61BM,SAAU7nI,EAAQm/F,EAAqBv/F,GAE7C,Ya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UACAtF,EAAAj1I,OACAi1I,EAAA4iB,WACA5iB,EAAA6iB,aACA7iB,EAAAjxF,WACAixF,EAAA6lB,mBACA7lB,EAAAggB,WACAhgB,EAAAh3I,SACAg3I,EAAAmrB,aACAnrB,EAAArjE,UACAqjE,EAAAosB,YACApsB,EAAAxmD,SACAwmD,EAAAqe,UACAre,EAAAimB,UACAjmB,EAAAsrB,QACAtrB,EAAA8iB,UACA9iB,EAAAtiD,QACAsiD,EAAAme,WACAne,EAAAqsB,QACArsB,EAAAsqB,YACAtqB,EAAAssB,aACAtsB,EAAAusB,YACAvsB,EAAAsgB,WACAtgB,EAAAwqB,gBACAxqB,EAAAtpE,aACAspE,EAAAinB,QACAjnB,EAAA+iB,UACA/iB,EAAAtiJ,YACAsiJ,EAAAkmB,cACAlmB,EAAAqpB,QACArpB,EAAA2b,WACA3b,EAAA4b,aACA5b,EAAA6b,eACA7b,EAAAspB,UACAtpB,EAAAp4I,SACAo4I,EAAAwsB,cACAxsB,EAAAyqB,SACAzqB,EAAA35C,UACA25C,EAAA3+I,UACA2+I,EAAAh5B,QACAg5B,EAAArkH,WACAqkH,EAAAue,cACAve,EAAA/0I,OACA+0I,EAAAgjB,WACAhjB,EAAAhyF,WACAgyF,EAAA/1I,SACA+1I,EAAAqqB,UACArqB,EAAAqc,cACArc,EAAAsc,gBACAtc,EAAAl1I,SACAk1I,EAAAogB,UACApgB,EAAAv4G,QACAu4G,EAAAuc,QACAvc,EAAAwc,aACAxc,EAAAyc,kBACAzc,EAAA0c,aACA1c,EAAAmd,OACAnd,EAAAqgB,YACArgB,EAAA2V,QACA3V,EAAA/iD,WACA+iD,EAAAurB,WACAvrB,EAAAwrB,aACAxrB,EAAAymB,UACAzmB,EAAAqN,iBACArN,EAAAx2I,aACAw2I,EAAA73B,SACA63B,EAAAupB,SACAvpB,EAAAwpB,WACAxpB,EAAAypB,aACAzpB,EAAA2c,QACA3c,EAAA4c,UACA5c,EAAA6c,YACA7c,EAAAkjB,SACAljB,EAAA8c,SACA9c,EAAA+c,aACA/c,EAAA5+I,UACA4+I,EAAAmjB,cACAnjB,EAAAh5I,UACAg5I,EAAAojB,YACApjB,EAAA0pB,WACA1pB,EAAA4U,SACA5U,EAAA5yI,QACA4yI,EAAA2pB,OACA3pB,EAAA4pB,SACA5pB,EAAA6pB,WACA7pB,EAAA7xF,OACA6xF,EAAAgd,aACAhd,EAAAid,iBACAjd,EAAA8pB,WAGA9pB,EAAAn5E,QAAA0kG,GACAvrB,EAAAotB,UAAA5B,GACAxrB,EAAA3rI,OAAA02J,GACA/qB,EAAAqtB,WAAAhJ,GAGA7qE,GAAAwmD,KAKAA,EAAAlgJ,OACAkgJ,EAAAilB,WACAjlB,EAAAyrB,aACAzrB,EAAA59C,cACA49C,EAAAzkH,QACAykH,EAAAxwG,SACAwwG,EAAAtgB,SACAsgB,EAAAygB,aACAzgB,EAAA0gB,iBACA1gB,EAAAwgB,aACAxgB,EAAA2gB,cACA3gB,EAAA6U,UACA7U,EAAA4lB,aACA5lB,EAAA2sB,UACA3sB,EAAAwjB,YACAxjB,EAAA6E,MACA7E,EAAAyjB,UACAzjB,EAAA0jB,gBACA1jB,EAAAn/H,SACAm/H,EAAA5yH,QACA4yH,EAAAob,aACApb,EAAAoiB,WACApiB,EAAAiqB,YACAjqB,EAAAqb,iBACArb,EAAAqiB,eACAriB,EAAAx6I,SACAw6I,EAAA10H,WACA00H,EAAAge,gBACAhe,EAAAsiB,SACAtiB,EAAAuiB,cACAviB,EAAAwiB,UACAxiB,EAAAyiB,eACAziB,EAAA1iJ,OACA0iJ,EAAA0qB,MACA1qB,EAAA2qB,OACA3qB,EAAA5xG,OACA4xG,EAAA4M,SACA5M,EAAA/+I,QACA++I,EAAAlzF,YACAkzF,EAAAkH,YACAlH,EAAAh1I,WACAg1I,EAAAqjB,WACArjB,EAAAqrB,UACArrB,EAAAiE,eACAjE,EAAAz1H,WACAy1H,EAAAd,iBACAc,EAAAuM,eACAvM,EAAAmN,qBACAnN,EAAA4gB,aACA5gB,EAAAmE,YACAnE,EAAAZ,UACAY,EAAA6gB,aACA7gB,EAAA8gB,WACA9gB,EAAA+gB,WACA/gB,EAAAghB,eACAhhB,EAAAihB,WACAjhB,EAAAz2I,YACAy2I,EAAAqI,cACArI,EAAAmhB,aACAnhB,EAAA2L,YACA3L,EAAAV,SACAU,EAAAohB,WACAphB,EAAAqhB,eACArhB,EAAAjnI,SACAinI,EAAAvhD,YACAuhD,EAAAyhB,SACAzhB,EAAAwhB,UACAxhB,EAAAshB,YACAthB,EAAAhkD,YACAgkD,EAAAC,gBACAD,EAAA/jD,iBACA+jD,EAAA7jD,YACA6jD,EAAA2hB,iBACA3hB,EAAAP,SACAO,EAAAke,YACAle,EAAAwH,YACAxH,EAAAL,gBACAK,EAAA4hB,eACA5hB,EAAA6hB,aACA7hB,EAAA8hB,aACA9hB,EAAA1hJ,QACA0hJ,EAAA2rB,aACA3rB,EAAA16C,QACA06C,EAAAhlC,eACAglC,EAAA4rB,aACA5rB,EAAA6rB,cACA7rB,EAAA4qB,MACA5qB,EAAA6qB,OACA7qB,EAAA16I,OACA06I,EAAA4mB,SACA5mB,EAAArzF,QACAqzF,EAAA6mB,UACA7mB,EAAAhqI,OACAgqI,EAAA8mB,SACA9mB,EAAAmmB,aACAnmB,EAAAomB,aACApmB,EAAAqmB,cACArmB,EAAAsmB,cACAtmB,EAAAumB,YACAvmB,EAAA8sB,YACA9sB,EAAA0b,OACA1b,EAAA+lB,cACA/lB,EAAAx+I,QACAw+I,EAAAhkI,OACAgkI,EAAApsG,OACAosG,EAAA4jB,UACA5jB,EAAA6jB,YACA7jB,EAAAprI,YACAorI,EAAA/xF,UACA+xF,EAAA16G,UACA06G,EAAAoe,eACApe,EAAAgkB,UACAhkB,EAAAxlG,WACAwlG,EAAA/hJ,UACA+hJ,EAAAr5I,SACAq5I,EAAAD,eACAC,EAAAse,UACAte,EAAA3/G,QACA2/G,EAAA8rB,aACA9rB,EAAAvuB,QACAuuB,EAAA+b,eACA/b,EAAAgc,iBACAhc,EAAAic,iBACAjc,EAAAkc,mBACAlc,EAAAmc,qBACAnc,EAAAoc,qBACApc,EAAA+rB,aACA/rB,EAAAkkB,cACAlkB,EAAAitB,YACAjtB,EAAAp6G,OACAo6G,EAAA+mB,SACA/mB,EAAAp3B,YACAo3B,EAAAwmB,SACAxmB,EAAAoX,YACApX,EAAA0H,aACA1H,EAAA2H,YACA3H,EAAAklB,WACAllB,EAAA1jD,YACA0jD,EAAAkiB,iBACAliB,EAAAhiJ,YACAgiJ,EAAAmlB,WACAnlB,EAAAn1I,QACAm1I,EAAAolB,WACAplB,EAAAqlB,aACArlB,EAAAslB,YACAtlB,EAAA/8I,YACA+8I,EAAA0mB,YACA1mB,EAAAgsB,aACAhsB,EAAAujB,cAGAvjB,EAAAn2I,KAAAyhB,GACA00H,EAAAstB,UAAAtP,GACAhe,EAAA/mH,MAAAh4B,GAEAu4F,GAAAwmD,EAAA,WACA,GAAAz2H,KAMA,OALAy+H,IAAAhI,EAAA,SAAA3a,EAAAovB,GACA72J,GAAAlB,KAAAsjJ,EAAAriJ,UAAA82J,KACAlrI,EAAAkrI,GAAApvB,KAGA97G,MACW2zI,OAAA,IAWXld,EAAAutB,QAn7gBA,SAs7gBA7nC,GAAA,yEAAA+uB,GACAzU,EAAAyU,GAAA/vC,YAAAs7B,IAIAta,GAAA,wBAAA+uB,EAAAnyJ,GACA49I,EAAAviJ,UAAA82J,GAAA,SAAAl3J,GACAA,MAAAyvB,GAAA,EAAAm8H,GAAAzB,GAAAnqJ,GAAA,EAEA,IAAAU,GAAAC,KAAA2iJ,eAAAv+I,EACA,GAAA49I,GAAAhiJ,MACAA,KAAAwhI,OAUA,OARAzhI,GAAA4iJ,aACA5iJ,EAAA8iJ,cAAAa,GAAArkJ,EAAAU,EAAA8iJ,eAEA9iJ,EAAA+iJ,UAAA3iJ,MACAgiC,KAAAuhH,GAAArkJ,EAAAquI,IACA3sI,KAAAw1J,GAAAx2J,EAAA2iJ,QAAA,gBAGA3iJ,GAGAiiJ,EAAAviJ,UAAA82J,EAAA,kBAAAl3J,GACA,MAAAW,MAAAy9B,UAAA84H,GAAAl3J,GAAAo+B,aAKA+pG,GAAA,qCAAA+uB,EAAAnyJ,GACA,GAAArD,GAAAqD,EAAA,EACAkrK,EAAAvuK,GAAAssI,IAp6gBA,GAo6gBAtsI,CAEAihJ,GAAAviJ,UAAA82J,GAAA,SAAAjvB,GACA,GAAAvnI,GAAAC,KAAAwhI,OAMA,OALAzhI,GAAA6iJ,cAAAziJ,MACAmnI,SAAAioB,GAAAjoB,EAAA,GACAvmI,SAEAhB,EAAA4iJ,aAAA5iJ,EAAA4iJ,cAAA2sB,EACAvvK,KAKAynI,GAAA,wBAAA+uB,EAAAnyJ,GACA,GAAAmrK,GAAA,QAAAnrK,EAAA,WAEA49I,GAAAviJ,UAAA82J,GAAA,WACA,MAAAv2J,MAAAuvK,GAAA,GAAA5wK,QAAA,MAKA6oI,GAAA,2BAAA+uB,EAAAnyJ,GACA,GAAAorK,GAAA,QAAAprK,EAAA,WAEA49I,GAAAviJ,UAAA82J,GAAA,WACA,MAAAv2J,MAAA2iJ,aAAA,GAAAX,GAAAhiJ,WAAAwvK,GAAA,MAIAxtB,EAAAviJ,UAAAo9J,QAAA,WACA,MAAA78J,MAAAmG,OAAAyoD,KAGAozF,EAAAviJ,UAAAyvB,KAAA,SAAAy4G,GACA,MAAA3nI,MAAAmG,OAAAwhI,GAAA5kI,QAGAi/I,EAAAviJ,UAAAssK,SAAA,SAAApkC,GACA,MAAA3nI,MAAAy9B,UAAAvO,KAAAy4G,IAGAqa,EAAAviJ,UAAAwsK,UAAA3b,GAAA,SAAAtmJ,EAAAuF,GACA,wBAAAvF,GACA,GAAAg4I,GAAAhiJ,MAEAA,KAAA6M,IAAA,SAAAlO,GACA,MAAA6sJ,IAAA7sJ,EAAAqL,EAAAuF,OAIAyyI,EAAAviJ,UAAA0oG,OAAA,SAAAw/B,GACA,MAAA3nI,MAAAmG,OAAAg6J,GAAA5Q,GAAA5nB,MAGAqa,EAAAviJ,UAAAsM,MAAA,SAAAhF,EAAAyW,GACAzW,EAAAyiJ,GAAAziJ,EAEA,IAAAhH,GAAAC,IACA,OAAAD,GAAA4iJ,eAAA57I,EAAA,GAAAyW,EAAA,GACA,GAAAwkI,GAAAjiJ,IAEAgH,EAAA,EACAhH,IAAAu+J,WAAAv3J,GACOA,IACPhH,IAAA+8J,KAAA/1J,IAEAyW,IAAAsR,KACAtR,EAAAgsI,GAAAhsI,GACAzd,EAAAyd,EAAA,EAAAzd,EAAAg9J,WAAAv/I,GAAAzd,EAAAs+J,KAAA7gJ,EAAAzW,IAEAhH,IAGAiiJ,EAAAviJ,UAAA8+J,eAAA,SAAA52B,GACA,MAAA3nI,MAAAy9B,UAAA+gI,UAAA72B,GAAAlqG,WAGAukH,EAAAviJ,UAAAs/F,QAAA,WACA,MAAA/+F,MAAAq+J,KAAA3wB,KAIAoc,GAAA9H,EAAAviJ,UAAA,SAAA0nI,EAAAovB,GACA,GAAAkZ,GAAA,qCAAA/pK,KAAA6wJ,GACAmZ,EAAA,kBAAAhqK,KAAA6wJ,GACAoZ,EAAA7tB,EAAA4tB,EAAA,gBAAAnZ,EAAA,YAAAA,GACAqZ,EAAAF,GAAA,QAAAhqK,KAAA6wJ,EAEAoZ,KAGA7tB,EAAAriJ,UAAA82J,GAAA,WACA,GAAA53J,GAAAqB,KAAAqiJ,YACA9yI,EAAAmgK,GAAA,GAAA7jK,UACAgkK,EAAAlxK,YAAAqjJ,GACA1a,EAAA/3H,EAAA,GACAugK,EAAAD,GAAAxjJ,GAAA1tB,GAEAugK,EAAA,SAAAvgK,GACA,GAAAoB,GAAA4vK,EAAA1mK,MAAA64I,EAAA3Z,GAAAxpI,GAAA4Q,GACA,OAAAmgK,IAAAttB,EAAAriJ,EAAA,GAAAA,EAGA+vK,IAAAL,GAAA,kBAAAnoC,IAAA,GAAAA,EAAArnI,SAEA4vK,EAAAC,GAAA,EAEA,IAAA1tB,GAAApiJ,KAAAuiJ,UACAwtB,IAAA/vK,KAAAsiJ,YAAAriJ,OACA+vK,EAAAJ,IAAAxtB,EACA6tB,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACAnxK,EAAAsxK,EAAAtxK,EAAA,GAAAqjJ,GAAAhiJ,KACA,IAAAD,GAAAonI,EAAAl+H,MAAAtK,EAAA4Q,EAEA,OADAxP,GAAAuiJ,YAAAniJ,MAAmCgnI,KAAAswB,GAAAloJ,MAAA2vJ,GAAA93B,QAAAt4G,KACnC,GAAAmzH,GAAAliJ,EAAAqiJ,GAEA,MAAA4tB,IAAAC,EACA9oC,EAAAl+H,MAAAjJ,KAAAuP,IAEAxP,EAAAC,KAAAy3J,KAAAyH,GACA8Q,EAAAN,EAAA3vK,EAAApB,QAAA,GAAAoB,EAAApB,QAAAoB,OAKAynI,GAAA,yDAAA+uB,GACA,GAAApvB,GAAAhQ,GAAAo/B,GACA2Z,EAAA,0BAAAxqK,KAAA6wJ,GAAA,aACAqZ,EAAA,kBAAAlqK,KAAA6wJ,EAEAzU,GAAAriJ,UAAA82J,GAAA,WACA,GAAAhnJ,GAAA1D,SACA,IAAA+jK,IAAA5vK,KAAAuiJ,UAAA,CACA,GAAA5jJ,GAAAqB,KAAArB,OACA,OAAAwoI,GAAAl+H,MAAAojB,GAAA1tB,QAAA4Q,GAEA,MAAAvP,MAAAkwK,GAAA,SAAAvxK,GACA,MAAAwoI,GAAAl+H,MAAAojB,GAAA1tB,QAAA4Q,QAMAu6I,GAAA9H,EAAAviJ,UAAA,SAAA0nI,EAAAovB,GACA,GAAAoZ,GAAA7tB,EAAAyU,EACA,IAAAoZ,EAAA,CACA,GAAAv/J,GAAAu/J,EAAA9wK,KAAA,IACAk8J,GAAA3qJ,KAAA2qJ,GAAA3qJ,QAEAjQ,MAAoBtB,KAAA03J,EAAApvB,KAAAwoC,OAIpB5U,GAAA7D,GAAApoI,GAAA09G,IAAA3tI,QACAA,KAAA,UACAsoI,KAAAr4G,KAIAkzH,EAAAviJ,UAAA+hI,MAAAuhB,EACAf,EAAAviJ,UAAAg+B,QAAAwlH,EACAjB,EAAAviJ,UAAAd,MAAAukJ,GAGApB,EAAAriJ,UAAAstK,GAAAlB,GACA/pB,EAAAriJ,UAAAu/J,MAAAG,GACArd,EAAAriJ,UAAA0wK,OAAA/Q,GACAtd,EAAAriJ,UAAA0uB,KAAAkxI,GACAvd,EAAAriJ,UAAAo4J,MAAA0H,GACAzd,EAAAriJ,UAAAg+B,QAAA+hI,GACA1d,EAAAriJ,UAAA2wK,OAAAtuB,EAAAriJ,UAAA8hE,QAAAugF,EAAAriJ,UAAAd,MAAA+gK,GAGA5d,EAAAriJ,UAAAs7B,MAAA+mH,EAAAriJ,UAAAsD,KAEA8gK,KACA/hB,EAAAriJ,UAAAokK,IAAAvE,IAEAxd,IAcAjtI,IAAAjJ,MAIAo7H,EAAA,WACA,MAAAp7H,KACKpN,KAAAJ,EAAAH,EAAAG,EAAAC,MAAAywB,KAAAzwB,EAAAD,QAAA4oI,KAaJxoI,KAAAwB,QvByv2B4BxB,KAAKJ,EAASH,EAAoB,GAAIA,EAAoB,IAAII,KAIrF,SAAUA,EAAQD,EAASH,GwBx73CjC,QAAAq/F,GAAA97F,GACAvD,EAAA,IAEA,GAAAs/F,GAAAt/F,EAAA,GAEAA,EAAA,IAEAA,EAAA,IAEAq/F,EAEA,kBAEA,KAGAj/F,GAAAD,QAAAm/F,EAAAn/F,SxB+73CM,SAAUC,EAAQD,EAASH,GyB/83CjC,QAAAq/F,GAAA97F,GACAvD,EAAA,IAEA,GAAAs/F,GAAAt/F,EAAA,GAEAA,EAAA,IAEAA,EAAA,IAEAq/F,EAEA,kBAEA,KAGAj/F,GAAAD,QAAAm/F,EAAAn/F,SzBs93CM,SAAUC,EAAQD,EAASH,G0Bt+3CjC,QAAAq/F,GAAA97F,GACAvD,EAAA,IAEA,GAAAs/F,GAAAt/F,EAAA,GAEAA,EAAA,IAEAA,EAAA,IAEAq/F,EAEA,kBAEA,KAGAj/F,GAAAD,QAAAm/F,EAAAn/F,S1B6+3CM,SAAUC,EAAQD,EAASH,G2B7/3CjC,QAAAq/F,GAAA97F,GACAvD,EAAA,IAEA,GAAAs/F,GAAAt/F,EAAA,GAEAA,EAAA,IAEAA,EAAA,IAEAq/F,EAEA,kBAEA,KAGAj/F,GAAAD,QAAAm/F,EAAAn/F,S3Bog4CM,SAAUC,EAAQD,G4Bph4CxBC,EAAAD,SAAgB8C,OAAA,WAAmB,GAAAmvK,GAAArwK,KAAaswK,EAAAD,EAAA98D,eAA0BD,EAAA+8D,EAAAn3C,MAAA5lB,IAAAg9D,CAC1E,OAAAh9D,GAAA,OACA3M,OACApmG,GAAA,WAEG+yG,EAAA,OACHiE,IAAA,WAECp2G,qB5B0h4CK,SAAU9C,EAAQD,EAASH,G6Bli4CjCI,EAAAD,SAAgB8C,OAAA,WAAmB,GAAAmvK,GAAArwK,KAAaswK,EAAAD,EAAA98D,cAA0B88D,GAAAn3C,MAAA5lB,EAC1E,OAAA+8D,GAAA/1C,GAAA,IACCn5H,iBAAA,WAA+B,GAAAkvK,GAAArwK,KAAaswK,EAAAD,EAAA98D,eAA0BD,EAAA+8D,EAAAn3C,MAAA5lB,IAAAg9D,CACvE,OAAAh9D,GAAA,OACA3M,OACApmG,GAAA,UAEG+yG,EAAA,OACH3M,OACA5F,IAAA9iG,EAAA,IACA+kI,IAAA,MAEGqtC,EAAA51C,GAAA,KAAAnnB,EAAA,OACH3M,OACApmG,GAAA,WAEG+yG,EAAA,MACH2C,YAAA,OACGo6D,EAAA51C,GAAA,mBAAA41C,EAAA51C,GAAA,KAAAnnB,EAAA,MACH2C,YAAA,OACGo6D,EAAA51C,GAAA,qB7Byi4CG,SAAUp8H,EAAQD,G8B7j4CxBC,EAAAD,SAAgB8C,OAAA,WAAmB,GAAAmvK,GAAArwK,KAAaswK,EAAAD,EAAA98D,eAA0BD,EAAA+8D,EAAAn3C,MAAA5lB,IAAAg9D,CAC1E,OAAAh9D,GAAA,OACA4C,OACA2uB,OAAAwrC,EAAAxrC,QAEAl+B,OACApmG,GAAA,UAEG+yG,EAAA,OACHiE,IAAA,WAECp2G,qB9Bmk4CK,SAAU9C,EAAQD,G+B9k4CxBC,EAAAD,SAAgB8C,OAAA,WAAmB,GAAAmvK,GAAArwK,KAAaswK,EAAAD,EAAA98D,eAA0BD,EAAA+8D,EAAAn3C,MAAA5lB,IAAAg9D,CAC1E,OAAAh9D,GAAA,OACA3M,OACApmG,GAAA,aAEG+yG,EAAA,MAAA+8D,EAAAl2C,GAAAk2C,EAAA,cAAAnzE,GACH,OAAAoW,EAAA,MAAAA,EAAA,KACA3M,OACAq+B,KAAA,qCAAA9nC,EAAAgpC,MAEKmqC,EAAA51C,GAAA41C,EAAAn2C,GAAAh9B,EAAA+oC,aACF,MACF9kI,qB/Bol4CK,SAAU9C,EAAQD,GgChm4CxBC,EAAAD,SAAgB8C,OAAA,WAAmB,GAAAmvK,GAAArwK,KAAaswK,EAAAD,EAAA98D,eAA0BD,EAAA+8D,EAAAn3C,MAAA5lB,IAAAg9D,CAC1E,OAAAh9D,GAAA,OACA3M,OACApmG,GAAA,SAEG8vK,EAAAvrC,OAIAurC,EAAA31C,KAJApnB,EAAA,QACH3M,OACAk+B,OAAAwrC,EAAAxrC,UAEGwrC,EAAA51C,GAAA,KAAAnnB,EAAA,WACH2C,YAAA,gBACGo6D,EAAA51C,GAAA,KAAAnnB,EAAA,QAAA+8D,EAAA51C,GAAA,KAAAnnB,EAAA,WACH2C,YAAA,mBACGo6D,EAAA51C,GAAA,KAAA41C,EAAA,MAAA/8D,EAAA,SAAA+8D,EAAA31C,MAAA,IACFv5H,qBhCsm4CK,SAAU9C,EAAQD,EAASH,GiCjn4CjC,GAAAyjI,GAAAzjI,EAAA,GACA,iBAAAyjI,SAAArjI,EAAAC,EAAAojI,EAAA,MACAA,EAAA6uC,SAAAlyK,EAAAD,QAAAsjI,EAAA6uC,OAEAtyK,GAAA,cAAAyjI,GAAA,IjC0n4CM,SAAUrjI,EAAQD,EAASH,GkC9n4CjC,GAAAyjI,GAAAzjI,EAAA,GACA,iBAAAyjI,SAAArjI,EAAAC,EAAAojI,EAAA,MACAA,EAAA6uC,SAAAlyK,EAAAD,QAAAsjI,EAAA6uC,OAEAtyK,GAAA,cAAAyjI,GAAA,IlCuo4CM,SAAUrjI,EAAQD,EAASH,GmC3o4CjC,GAAAyjI,GAAAzjI,EAAA,GACA,iBAAAyjI,SAAArjI,EAAAC,EAAAojI,EAAA,MACAA,EAAA6uC,SAAAlyK,EAAAD,QAAAsjI,EAAA6uC,OAEAtyK,GAAA,cAAAyjI,GAAA,InCop4CM,SAAUrjI,EAAQD,EAASH,GoCxp4CjC,GAAAyjI,GAAAzjI,EAAA,GACA,iBAAAyjI,SAAArjI,EAAAC,EAAAojI,EAAA,MACAA,EAAA6uC,SAAAlyK,EAAAD,QAAAsjI,EAAA6uC,OAEAtyK,GAAA,cAAAyjI,GAAA,IpCiq4CM,SAAUrjI,EAAQD,EAASH,GqCrq4CjC,GAAAyjI,GAAAzjI,EAAA,GACA,iBAAAyjI,SAAArjI,EAAAC,EAAAojI,EAAA,MACAA,EAAA6uC,SAAAlyK,EAAAD,QAAAsjI,EAAA6uC,OAEAtyK,GAAA,cAAAyjI,GAAA,IrC8q4CM,SAAUrjI,EAAQD,GsCjr4CxBC,EAAAD,QAAA,SAAAyH,EAAAhG,GAGA,OAFAuC,MACAouK,KACAlyK,EAAA,EAAiBA,EAAAuB,EAAAI,OAAiB3B,IAAA,CAClC,GAAA4B,GAAAL,EAAAvB,GACAiC,EAAAL,EAAA,GACA+D,EAAA/D,EAAA,GACAgE,EAAAhE,EAAA,GACAiE,EAAAjE,EAAA,GACAuwK,GACAlwK,GAAAsF,EAAA,IAAAvH,EACA2F,MACAC,QACAC,YAEAqsK,GAAAjwK,GAGAiwK,EAAAjwK,GAAAkC,MAAAtC,KAAAswK,GAFAruK,EAAAjC,KAAAqwK,EAAAjwK,IAAmCA,KAAAkC,OAAAguK,KAKnC,MAAAruK,KtC6r4CM,SAAU/D,EAAQD,GuCtt4CxBC,EAAAD,QAAA,SAAAC,GAoBA,MAnBAA,GAAAqyK,kBACAryK,EAAAsyK,UAAA,aACAtyK,EAAAipJ,SAEAjpJ,EAAA8oC,WAAA9oC,EAAA8oC,aACAnoC,OAAAC,eAAAZ,EAAA,UACAc,YAAA,EACAC,IAAA,WACA,MAAAf,GAAAE,KAGAS,OAAAC,eAAAZ,EAAA,MACAc,YAAA,EACAC,IAAA,WACA,MAAAf,GAAAC,KAGAD,EAAAqyK,gBAAA,GAEAryK","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(36)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"favicon.png?87a44c55f34565f64ec5a7908c2a0f9d\";\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* eslint-disable */\r\n;(function() {\r\n\r\n  'use strict'\r\n\r\n  var opt = {\r\n    complement: window.document.title,\r\n    separator: '|'\r\n  }\r\n\r\n  var diffTitle = {}\r\n  var els = []\r\n  var diffEls = []\r\n  var installed = false\r\n\r\n  var util = {\r\n    /**\r\n     * Shorthand\r\n     * @type {Object}\r\n     */\r\n    shorthand: {\r\n      ch: 'charset',\r\n      tg: 'target',\r\n      n: 'name',\r\n      he: 'http-equiv',\r\n      ip: 'itemprop',\r\n      c: 'content',\r\n      p: 'property',\r\n      sc: 'scheme',\r\n      r: 'rel',\r\n      h: 'href',\r\n      sz: 'sizes',\r\n      t: 'type',\r\n      s: 'src',\r\n      a: 'async',\r\n      d: 'defer',\r\n      i: 'inner'\r\n    },\r\n\r\n    /**\r\n     * This function return the element <head>\r\n     * @type {Function}\r\n     * @return {Object}\r\n     */\r\n    getPlace: function (place) {\r\n      return window.document.getElementsByTagName(place)[0]\r\n    },\r\n\r\n    /**\r\n     * Undo the window.document title for previous state\r\n     * @type {Function}\r\n     * @param  {Object} state \r\n     */\r\n    undoTitle: function (state) {\r\n      if (!state.before) return\r\n      window.document.title = state.before\r\n    },\r\n\r\n    /**\r\n     * Undo elements to its previous state\r\n     * @type {Function}\r\n     */\r\n    undo: function () {\r\n      if (!els.length) return\r\n      els.map(function (el) {\r\n        el.parentElement.removeChild(el)\r\n      })\r\n      els = []\r\n    },\r\n\r\n    /**\r\n     * Set attributes in element\r\n     * @type {Function}\r\n     * @param  {Object} obj\r\n     * @param  {HTMLElement} el\r\n     * @return {HTMLElement} with defined attributes\r\n     */\r\n    prepareElement: function (obj, el) {\r\n      var self = this\r\n      Object.keys(obj).map(function (prop) {\r\n        var sh = self.shorthand[prop] || prop\r\n        if (sh.match(/(body|undo|replace)/g)) return\r\n        if (sh === 'inner') {\r\n          el.textContent = obj[prop]\r\n          return\r\n        }\r\n        el.setAttribute(sh, obj[prop])\r\n      })\r\n      return el\r\n    },\r\n\r\n    /**\r\n     * Change window.document title\r\n     * @type {Function}\r\n     * @param  {Object} obj\r\n     */\r\n    title: function (obj) {\r\n      if (!obj) return\r\n      diffTitle.before = opt.complement\r\n      var title = obj.inner + ' ' + (obj.separator || opt.separator) +\r\n        ' ' +  (obj.complement || opt.complement)\r\n      window.document.title = title.trim()\r\n    },\r\n\r\n    /**\r\n     * Update Element\r\n     */\r\n    update: function () {\r\n      if (!els.length) return\r\n      els.forEach(function(el, key) {\r\n        if (diffEls[key] && !diffEls[key].isEqualNode(el)) {\r\n          el.parentElement.replaceChild(diffEls[key], els[key])\r\n          els.splice(key, 1, diffEls[key])\r\n          return\r\n        }\r\n      })\r\n      diffEls = []\r\n    },\r\n\r\n    /**\r\n     * Add Elements\r\n     * @param {Object} obj\r\n     * @param {HTMLElement} el\r\n     * @param {HTMLElement} parent\r\n     */\r\n    add: function (obj, el, parent) {\r\n      parent.appendChild(el)\r\n      // Fixed elements that do not suffer removal\r\n      if (obj.undo !== undefined && !obj.undo) return\r\n      // Elements which are removed\r\n      els.push(el)\r\n    },\r\n\r\n    /**\r\n     * Handle of create elements\r\n     * @type {Function}\r\n     * @param  {Array} arr\r\n     * @param  {String} tag   - style, link, meta, script, base\r\n     * @param  {String} place - Default 'head'\r\n     * @param  {Boolean} update\r\n     */\r\n    handle: function (arr, tag, place, update) {\r\n      var self = this\r\n      if (!arr) return\r\n      arr.map(function (obj) {\r\n        var parent = (obj.body) ? self.getPlace('body') : self.getPlace(place)\r\n        var el = window.document.getElementById(obj.id) || window.document.createElement(tag)\r\n        // Elements that will substitute data\r\n        if (el.hasAttribute('id') || obj.id) {\r\n          self.prepareElement(obj, el)\r\n          return\r\n        }\r\n        // Other elements\r\n        el = self.prepareElement(obj, el)\r\n        // Updated elements\r\n        if (update) {\r\n          diffEls.push(el)\r\n          return\r\n        }\r\n        // Append Elements\r\n        self.add(obj, el, parent)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Plugin | vue-head\r\n   * @param  {Function} Vue\r\n   * @param  {Object} options\r\n   */\r\n  function VueHead (Vue, options) {\r\n    if (installed) return\r\n\r\n    installed = true\r\n\r\n    if (options) {\r\n      Vue.util.extend(opt, options)\r\n    }\r\n\r\n    /**\r\n     * Initializes and updates the elements in the head\r\n     * @param  {Boolean} update\r\n     */\r\n    function init (update) {\r\n      var self = this\r\n      var head = self.$options.head\r\n      if (!head) return\r\n      Object.keys(head).map(function (key) {\r\n        var prop = head[key]\r\n        if (!prop) return\r\n        var obj = (typeof prop === 'function') ? head[key].bind(self)() : head[key]\r\n        if (key === 'title') {\r\n          util[key](obj)\r\n          return\r\n        }\r\n        util.handle(obj, key, 'head', update)\r\n      })\r\n      self.$emit('okHead')\r\n    }\r\n\r\n    /**\r\n     * Remove the meta tags elements in the head\r\n     */\r\n    function destroy () {\r\n      if (!this.$options.head) return\r\n      util.undoTitle(diffTitle)\r\n      util.undo()\r\n    }\r\n\r\n    // v1\r\n    if (Vue.version.match(/[1].(.)+/g)) {\r\n      Vue.mixin({\r\n        ready: function () {\r\n          init.bind(this)()\r\n        },\r\n        destroyed: function () {\r\n          destroy.bind(this)()\r\n        },\r\n        events: {\r\n          updateHead: function () {\r\n            init.bind(this)(true)\r\n            util.update()\r\n          }\r\n        }   \r\n      })\r\n    }\r\n    // v2\r\n    if (Vue.version.match(/[2].(.)+/g)) {\r\n      Vue.mixin({\r\n        created: function () {\r\n          var self = this\r\n          self.$on('updateHead', function () {\r\n            init.bind(self)(true)\r\n            util.update()\r\n          })\r\n        },\r\n        mounted: function () {\r\n          init.bind(this)()\r\n        },\r\n        beforeDestroy: function () {\r\n          destroy.bind(this)()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  VueHead.version = '2.0.11'\r\n\r\n  // auto install\r\n  if (typeof Vue !== 'undefined') {\r\n    Vue.use(VueHead)\r\n  }\r\n\r\n  if(true) {\r\n    module.exports = VueHead\r\n  } else if(typeof define === 'function' && define.amd) {\r\n    define(function () { return VueHead })\r\n  } else if (typeof window !== 'undefined') {\r\n    window.VueHead = VueHead\r\n  }\r\n\r\n})()\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(35)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(9),\n  /* template */\n  __webpack_require__(30),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.3.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.3';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_logo_vue__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_logo_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_logo_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_tagNav_vue__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_tagNav_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_tagNav_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_cover_vue__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_cover_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_cover_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_load_vue__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_load_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_load_vue__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'app',\n  created: function created() {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.cover = true;\n    }, 700);\n    setTimeout(function () {\n      _this.loaded = true;\n    }, 900);\n    setTimeout(function () {\n      _this.finish = true;\n    }, 1100);\n  },\n  data: function data() {\n    return {\n      msg: 'Welcome!',\n      cover: false,\n      loaded: false,\n      finish: false\n    };\n  },\n\n  head: {\n    meta: [\n    // Facebook / Open Graph\n    {\n      property: 'og:title',\n      content: 'Content Title'\n    }, {\n      property: 'og:url',\n      content: 'http://major.hackntu.taipei'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }, {\n      property: 'og:title',\n      content: '臺大黑客松 HackNTU'\n    }, {\n      property: 'og:description',\n      content: '7/21-23 (花博公園爭艷館)，三天Hacking不間斷！'\n    }, {\n      property: 'og:image',\n      content: '@/assets/preview.png'\n    }],\n    link: [\n    // Favicon\n    {\n      rel: 'shortcut icon',\n      href: __webpack_require__(4),\n      sizes: '16x16',\n      type: 'image/png'\n    }, {\n      rel: 'icon',\n      href: __webpack_require__(4),\n      sizes: '16x16',\n      type: 'image/png'\n    }]\n  },\n  components: {\n    Logo: __WEBPACK_IMPORTED_MODULE_0__components_logo_vue___default.a,\n    TagNav: __WEBPACK_IMPORTED_MODULE_1__components_tagNav_vue___default.a,\n    Cover: __WEBPACK_IMPORTED_MODULE_2__components_cover_vue___default.a,\n    Load: __WEBPACK_IMPORTED_MODULE_3__components_load_vue___default.a\n  }\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'cover',\n  mounted: function mounted() {\n    d3_init(this.$el);\n  },\n  data: function data() {\n    return {\n      msg: 'Welcome!'\n    };\n  }\n});\n\n/*============================\n=            Data            =\n============================*/\n\nvar data = __WEBPACK_IMPORTED_MODULE_1_lodash___default.a.shuffle([{\n  zh: '資訊安全',\n  en: '（Information Security）'\n}, {\n  zh: '公民參與',\n  en: '（Citizen Participation）'\n}, {\n  zh: '開放資料',\n  en: '（Open Data）'\n}, {\n  zh: '機器學習',\n  en: '（Machine Learning）'\n}, {\n  zh: '社群',\n  en: '（Community）'\n}, {\n  zh: '社會服務',\n  en: '（Social Services）'\n}, {\n  zh: '物聯網',\n  en: '（Internet of Things）'\n}, {\n  zh: '資料分析',\n  en: '（Data Analysis）'\n}, {\n  zh: '消費者',\n  en: '（Consumer）'\n}, {\n  zh: '資料視覺化',\n  en: '（Data Visualization）'\n}, {\n  zh: '數位人文',\n  en: '（Digital Humanities）'\n}, {\n  zh: '人工智慧',\n  en: '（Artificial Intelligence）'\n}, {\n  zh: '虛擬實境',\n  en: '（Virtual Reality）'\n}, {\n  zh: '教育',\n  en: '（Education）'\n}, {\n  zh: '金融',\n  en: '（Finance）'\n}]);\n\ndata.unshift({\n  zh: '中心',\n  en: '（Center）'\n}\n\n// console.log('data', data)\n\n/*=====  End of Data  ======*/\n\n);function d3_init(el) {\n\n  var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](el).select('svg');\n\n  var color = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scaleOrdinal\"](__WEBPACK_IMPORTED_MODULE_0_d3__[\"schemeCategory10\"]);\n\n  var width = void 0,\n      height = void 0,\n      centerX = void 0,\n      centerY = void 0;\n\n  resetCenter();\n\n  var center = svg.selectAll('g').data(data).enter().filter(function (d, i) {\n    return i === 0;\n  }).append('g').append('circle').attr('r', 200).attr('cx', centerX).attr('cy', centerY).attr('fill', 'white'\n  // .attr('stroke', 'red')\n\n\n  //draw circles for the nodes\n  );var nodes = svg.selectAll('g').data(data).enter().append('g').filter(function (d, i) {\n    return i !== 0;\n  });\n\n  var nodeEvents = nodes.on('mouseover', function (d, i) {\n\n    __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).selectAll('circle').transition\n    // .duration(300)\n    // .ease(d3.easeBackIn, 4)\n    ().attr('r', 100).attr('stroke-dasharray', 18, 2).style('opacity', 0.03);\n\n    __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).selectAll('text').transition\n    // .duration(500)\n    ().style('opacity', 0.4);\n  });\n\n  var circles = nodes.append('circle').attr('r', 20).attr('cx', centerX).attr('cy', centerY\n  // .attr('fill', 'white')\n  ).attr('fill', function (d, i) {\n    return color(i);\n  }).style('opacity', 0.08).attr('stroke', 'gray').attr('stroke-opacity', 0\n  // .attr('stroke-width', 2)\n\n\n  );function textAttr(t) {\n    t.attr('fill', function (d, i) {\n      return color(i);\n    }).attr('text-anchor', 'middle').attr('font-size', 14).style('opacity', 0);\n  }\n\n  var textsZh = nodes.append('text').text(function (d) {\n    return d.zh;\n  }).call(textAttr);\n\n  var textsEn = nodes.append('text').text(function (d) {\n    return d.en;\n  }).call(textAttr);\n\n  var force = __WEBPACK_IMPORTED_MODULE_0_d3__[\"forceSimulation\"]().nodes(data).force('charge', __WEBPACK_IMPORTED_MODULE_0_d3__[\"forceManyBody\"]().strength(function (d, i) {\n    return i === 0 ? -5 * height : width * -2;\n  }\n  // .strength((d, i) => i === 0 ? (-3000) : (width * -2))\n  // .strength(height * -1.5)\n  // .strength(-2000)\n  // .distanceMax(1000)\n  )).force('center', __WEBPACK_IMPORTED_MODULE_0_d3__[\"forceCenter\"](centerX, centerY)).force('x', __WEBPACK_IMPORTED_MODULE_0_d3__[\"forceX\"]()).force('y', __WEBPACK_IMPORTED_MODULE_0_d3__[\"forceY\"]()\n  // .alphaTarget(1)\n  // .alphaTarget(0.2)\n  ).alphaTarget(0.4).on('tick', ticked\n  // .stop()\n\n  );function ticked() {\n\n    resetCenter\n\n    // center\n    //   .attr('x', centerX)\n    //   .attr('y', centerY)\n\n    ();circles.attr('cx', function (d) {\n      return d.x;\n    }).attr('cy', function (d) {\n      return d.y;\n    });\n\n    textsZh.attr('dx', function (d) {\n      return d.x;\n    }).attr('dy', function (d) {\n      return d.y - 10;\n    });\n\n    textsEn.attr('dx', function (d) {\n      return d.x;\n    }).attr('dy', function (d) {\n      return d.y + 10;\n    });\n  }\n\n  function resetCenter() {\n\n    width = window.innerWidth;\n    height = window.innerHeight;\n    centerX = width / 2;\n    centerY = height / 2;\n    // centerY = height / 2 - 90\n\n  }\n\n  // setInterval(() => {\n\n  //   force.restart()\n  //   console.log('interval')\n\n  // }, 1000)\n\n\n  window.addEventListener('resize', function () {\n    window.scrollTo(0, 1);\n    resetCenter();\n    force.force('center', __WEBPACK_IMPORTED_MODULE_0_d3__[\"forceCenter\"](centerX, centerY));\n  }, true);\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'load',\n  mounted: function mounted() {\n    d3_init(this.$el);\n  },\n  data: function data() {\n    return {\n      msg: 'Welcome!'\n    };\n  },\n\n  props: ['loaded']\n});\n\nfunction d3_init(el) {\n\n  var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](el).select('svg');\n\n  var width = void 0,\n      height = void 0,\n      centerX = void 0,\n      centerY = void 0;\n\n  resetCenter();\n\n  function ballAttr(b) {\n    b.attr('r', 5).attr('cx', centerX).attr('cy', 0).attr('stroke-width', 0);\n  }\n\n  var ballp = svg.append('circle').attr('fill', '#422372').call(ballAttr);\n\n  var ballg = svg.append('circle').attr('fill', '#00c1bf').call(ballAttr);\n\n  function ballTransition(b, d) {\n    b.transition().duration(d).ease(__WEBPACK_IMPORTED_MODULE_0_d3__[\"easeBounceOut\"], 1).attr('cy', centerY\n    // .attr('transform', 'scale(1, 0.7)')\n    ).transition().duration(200).attr('opacity', 0.1\n    // .attr('r', 10)\n    );\n  }\n\n  ballp.call(ballTransition, 700);\n\n  ballg.call(ballTransition, 1100);\n\n  function resetCenter() {\n\n    width = window.innerWidth;\n    height = window.innerHeight;\n    centerX = width / 2;\n    centerY = height / 2;\n  }\n\n  window.addEventListener('resize', function () {\n    window.scrollTo(0, 1);\n    resetCenter();\n  }, true);\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'logo',\n  data: function data() {\n    return {\n      msg: 'Welcome!'\n    };\n  }\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'tag-nav',\n  data: function data() {\n    return {\n      msg: 'Welcome!',\n      tags: [{\n        zh: '會前活動',\n        en: 'pre'\n      }, {\n        zh: '活動介紹',\n        en: 'intro'\n      }, {\n        zh: '專欄採訪',\n        en: 'interview'\n      }, {\n        zh: '我要報名',\n        en: 'sign'\n      }, {\n        zh: '合作單位',\n        en: 'partner'\n      }]\n    };\n  }\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_head__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_head___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_head__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_vue__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__App_vue__);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue_head___default.a);\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  el: '#app',\n  render: function render(h) {\n    return h(__WEBPACK_IMPORTED_MODULE_2__App_vue___default.a);\n  }\n});\n\n/*----------  js control  ----------*/\n\n// lock screen orientation\n// screen.lockOrientation('portrait'); // it's not work...\n\n\n/*----------  events  ----------*/\n\n// disable touchmove\ndocument.addEventListener(\"touchmove\", function (event) {\n  event.preventDefault();\n}, false);\n\nwindow.addEventListener('resize', function () {\n  window.scrollTo(0, 1);\n}, true);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)();\n// imports\n\n\n// module\nexports.push([module.i, \"#cover[data-v-2cf29889]{width:100vw;height:100vh;position:absolute;top:0;z-index:-1}svg[data-v-2cf29889]{width:100%;height:100%}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)();\n// imports\n\n\n// module\nexports.push([module.i, \"#logo[data-v-3c6e746e]{position:absolute;margin-top:calc(50vh - 190px);left:50vw;margin-left:-90px}#logo img[data-v-3c6e746e]{border-radius:50%;width:180px;max-width:100%}#title[data-v-3c6e746e]{height:100px}#title>[data-v-3c6e746e]{margin:0;font-size:1.6em;font-weight:700;display:block}#title .en[data-v-3c6e746e]{font-family:initial;letter-spacing:1.2px}#title .zh[data-v-3c6e746e]{font-family:monospace;font-size:1.8em;letter-spacing:1px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)();\n// imports\n\n\n// module\nexports.push([module.i, \"#load[data-v-521ea0f8]{width:100vw;height:100vh;position:absolute;top:0;z-index:100;background:#fff;transition:background .2s ease-out}#load.loaded[data-v-521ea0f8]{background:transparent}svg[data-v-521ea0f8]{width:100%;height:100%}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)();\n// imports\n\n\n// module\nexports.push([module.i, \"#tag-nav ul[data-v-c3150a72]{padding:0}#tag-nav li[data-v-c3150a72]{display:inline-block;font-size:16px;margin:0 6px;cursor:pointer}#tag-nav li[data-v-c3150a72]:after{content:\\\"\\\";display:block;width:100%;height:2px;bottom:0;left:0;background-color:#555;visibility:hidden;transform:scaleX(0);transition:all .3s ease-in-out 0s}#tag-nav li[data-v-c3150a72]:hover:after{visibility:visible;transform:scaleX(1)}@media (max-width:767px){#tag-nav li[data-v-c3150a72]{font-size:12px;margin:0 3px}}#tag-nav a[data-v-c3150a72]{letter-spacing:.4px;font-weight:500;text-decoration:none;color:#1b2632;display:block;opacity:.8}@media (max-width:767px){#tag-nav a[data-v-c3150a72]{font-weight:400}}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)();\n// imports\n\n\n// module\nexports.push([module.i, \"#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center}#app,a{color:#2c3e50}.nav{position:relative}.nav-top{top:calc(50vh - 200px)}@media (min-width:768px) and (max-width:1023px),(min-width:1024px){.nav-top{display:none}}.nav-bottom{top:calc(50vh + 100px)}@media (max-width:767px){.nav-bottom{display:none}}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"logo-wb-m.png?36a14a1a47ecf8176a26b815a948f3bc\";\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(37)(module)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(31)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(10),\n  /* template */\n  __webpack_require__(26),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-2cf29889\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(33)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(11),\n  /* template */\n  __webpack_require__(28),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-521ea0f8\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(32)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(12),\n  /* template */\n  __webpack_require__(27),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-3c6e746e\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(34)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(13),\n  /* template */\n  __webpack_require__(29),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-c3150a72\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"cover\"\n    }\n  }, [_c('svg', {\n    ref: \"svg\"\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"logo\"\n    }\n  }, [_c('img', {\n    attrs: {\n      \"src\": __webpack_require__(20),\n      \"alt\": \"\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"title\"\n    }\n  }, [_c('h2', {\n    staticClass: \"en\"\n  }, [_vm._v(\" 2017HackNTU \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"zh\"\n  }, [_vm._v(\" 臺大黑客松 \")])])])\n}]}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: {\n      loaded: _vm.loaded\n    },\n    attrs: {\n      \"id\": \"load\"\n    }\n  }, [_c('svg', {\n    ref: \"svg\"\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"tag-nav\"\n    }\n  }, [_c('ul', [_vm._l((_vm.tags), function(tag) {\n    return [_c('li', [_c('a', {\n      attrs: {\n        \"href\": 'https://hackntu.tumblr.com/tagged/' + tag.en\n      }\n    }, [_vm._v(_vm._s(tag.zh))])])]\n  })], 2)])\n},staticRenderFns: []}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [(!_vm.finish) ? _c('load', {\n    attrs: {\n      \"loaded\": _vm.loaded\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('tag-nav', {\n    staticClass: \"nav nav-top\"\n  }), _vm._v(\" \"), _c('logo'), _vm._v(\" \"), _c('tag-nav', {\n    staticClass: \"nav nav-bottom\"\n  }), _vm._v(\" \"), (_vm.cover) ? _c('cover') : _vm._e()], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(15);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(2)(\"ce170c22\", content, true);\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(16);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(2)(\"cdd7591e\", content, true);\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(2)(\"6f10537d\", content, true);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(18);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(2)(\"c39b2af0\", content, true);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(19);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(2)(\"f70f0206\", content, true);\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5b5a0ae016b3f170a5fc","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 0\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 1\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 2\n// module chunks = 0","// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","module.exports = __webpack_public_path__ + \"favicon.png?87a44c55f34565f64ec5a7908c2a0f9d\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/logo/favicon.png\n// module id = 4\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 5\n// module chunks = 0","/* eslint-disable */\r\n;(function() {\r\n\r\n  'use strict'\r\n\r\n  var opt = {\r\n    complement: window.document.title,\r\n    separator: '|'\r\n  }\r\n\r\n  var diffTitle = {}\r\n  var els = []\r\n  var diffEls = []\r\n  var installed = false\r\n\r\n  var util = {\r\n    /**\r\n     * Shorthand\r\n     * @type {Object}\r\n     */\r\n    shorthand: {\r\n      ch: 'charset',\r\n      tg: 'target',\r\n      n: 'name',\r\n      he: 'http-equiv',\r\n      ip: 'itemprop',\r\n      c: 'content',\r\n      p: 'property',\r\n      sc: 'scheme',\r\n      r: 'rel',\r\n      h: 'href',\r\n      sz: 'sizes',\r\n      t: 'type',\r\n      s: 'src',\r\n      a: 'async',\r\n      d: 'defer',\r\n      i: 'inner'\r\n    },\r\n\r\n    /**\r\n     * This function return the element <head>\r\n     * @type {Function}\r\n     * @return {Object}\r\n     */\r\n    getPlace: function (place) {\r\n      return window.document.getElementsByTagName(place)[0]\r\n    },\r\n\r\n    /**\r\n     * Undo the window.document title for previous state\r\n     * @type {Function}\r\n     * @param  {Object} state \r\n     */\r\n    undoTitle: function (state) {\r\n      if (!state.before) return\r\n      window.document.title = state.before\r\n    },\r\n\r\n    /**\r\n     * Undo elements to its previous state\r\n     * @type {Function}\r\n     */\r\n    undo: function () {\r\n      if (!els.length) return\r\n      els.map(function (el) {\r\n        el.parentElement.removeChild(el)\r\n      })\r\n      els = []\r\n    },\r\n\r\n    /**\r\n     * Set attributes in element\r\n     * @type {Function}\r\n     * @param  {Object} obj\r\n     * @param  {HTMLElement} el\r\n     * @return {HTMLElement} with defined attributes\r\n     */\r\n    prepareElement: function (obj, el) {\r\n      var self = this\r\n      Object.keys(obj).map(function (prop) {\r\n        var sh = self.shorthand[prop] || prop\r\n        if (sh.match(/(body|undo|replace)/g)) return\r\n        if (sh === 'inner') {\r\n          el.textContent = obj[prop]\r\n          return\r\n        }\r\n        el.setAttribute(sh, obj[prop])\r\n      })\r\n      return el\r\n    },\r\n\r\n    /**\r\n     * Change window.document title\r\n     * @type {Function}\r\n     * @param  {Object} obj\r\n     */\r\n    title: function (obj) {\r\n      if (!obj) return\r\n      diffTitle.before = opt.complement\r\n      var title = obj.inner + ' ' + (obj.separator || opt.separator) +\r\n        ' ' +  (obj.complement || opt.complement)\r\n      window.document.title = title.trim()\r\n    },\r\n\r\n    /**\r\n     * Update Element\r\n     */\r\n    update: function () {\r\n      if (!els.length) return\r\n      els.forEach(function(el, key) {\r\n        if (diffEls[key] && !diffEls[key].isEqualNode(el)) {\r\n          el.parentElement.replaceChild(diffEls[key], els[key])\r\n          els.splice(key, 1, diffEls[key])\r\n          return\r\n        }\r\n      })\r\n      diffEls = []\r\n    },\r\n\r\n    /**\r\n     * Add Elements\r\n     * @param {Object} obj\r\n     * @param {HTMLElement} el\r\n     * @param {HTMLElement} parent\r\n     */\r\n    add: function (obj, el, parent) {\r\n      parent.appendChild(el)\r\n      // Fixed elements that do not suffer removal\r\n      if (obj.undo !== undefined && !obj.undo) return\r\n      // Elements which are removed\r\n      els.push(el)\r\n    },\r\n\r\n    /**\r\n     * Handle of create elements\r\n     * @type {Function}\r\n     * @param  {Array} arr\r\n     * @param  {String} tag   - style, link, meta, script, base\r\n     * @param  {String} place - Default 'head'\r\n     * @param  {Boolean} update\r\n     */\r\n    handle: function (arr, tag, place, update) {\r\n      var self = this\r\n      if (!arr) return\r\n      arr.map(function (obj) {\r\n        var parent = (obj.body) ? self.getPlace('body') : self.getPlace(place)\r\n        var el = window.document.getElementById(obj.id) || window.document.createElement(tag)\r\n        // Elements that will substitute data\r\n        if (el.hasAttribute('id') || obj.id) {\r\n          self.prepareElement(obj, el)\r\n          return\r\n        }\r\n        // Other elements\r\n        el = self.prepareElement(obj, el)\r\n        // Updated elements\r\n        if (update) {\r\n          diffEls.push(el)\r\n          return\r\n        }\r\n        // Append Elements\r\n        self.add(obj, el, parent)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Plugin | vue-head\r\n   * @param  {Function} Vue\r\n   * @param  {Object} options\r\n   */\r\n  function VueHead (Vue, options) {\r\n    if (installed) return\r\n\r\n    installed = true\r\n\r\n    if (options) {\r\n      Vue.util.extend(opt, options)\r\n    }\r\n\r\n    /**\r\n     * Initializes and updates the elements in the head\r\n     * @param  {Boolean} update\r\n     */\r\n    function init (update) {\r\n      var self = this\r\n      var head = self.$options.head\r\n      if (!head) return\r\n      Object.keys(head).map(function (key) {\r\n        var prop = head[key]\r\n        if (!prop) return\r\n        var obj = (typeof prop === 'function') ? head[key].bind(self)() : head[key]\r\n        if (key === 'title') {\r\n          util[key](obj)\r\n          return\r\n        }\r\n        util.handle(obj, key, 'head', update)\r\n      })\r\n      self.$emit('okHead')\r\n    }\r\n\r\n    /**\r\n     * Remove the meta tags elements in the head\r\n     */\r\n    function destroy () {\r\n      if (!this.$options.head) return\r\n      util.undoTitle(diffTitle)\r\n      util.undo()\r\n    }\r\n\r\n    // v1\r\n    if (Vue.version.match(/[1].(.)+/g)) {\r\n      Vue.mixin({\r\n        ready: function () {\r\n          init.bind(this)()\r\n        },\r\n        destroyed: function () {\r\n          destroy.bind(this)()\r\n        },\r\n        events: {\r\n          updateHead: function () {\r\n            init.bind(this)(true)\r\n            util.update()\r\n          }\r\n        }   \r\n      })\r\n    }\r\n    // v2\r\n    if (Vue.version.match(/[2].(.)+/g)) {\r\n      Vue.mixin({\r\n        created: function () {\r\n          var self = this\r\n          self.$on('updateHead', function () {\r\n            init.bind(self)(true)\r\n            util.update()\r\n          })\r\n        },\r\n        mounted: function () {\r\n          init.bind(this)()\r\n        },\r\n        beforeDestroy: function () {\r\n          destroy.bind(this)()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  VueHead.version = '2.0.11'\r\n\r\n  // auto install\r\n  if (typeof Vue !== 'undefined') {\r\n    Vue.use(VueHead)\r\n  }\r\n\r\n  if(typeof exports === 'object' && typeof module === 'object') {\r\n    module.exports = VueHead\r\n  } else if(typeof define === 'function' && define.amd) {\r\n    define(function () { return VueHead })\r\n  } else if (typeof window !== 'undefined') {\r\n    window.VueHead = VueHead\r\n  }\r\n\r\n})()\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-head/vue-head.js\n// module id = 6\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e67de874\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e67de874\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 7\n// module chunks = 0","/*!\n * Vue.js v2.3.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.3';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 8\n// module chunks = 0","<template>\n  <div id=\"app\">\n    <load v-if=\"!finish\" :loaded=\"loaded\"></load>\n    <tag-nav class=\"nav nav-top\"></tag-nav>\n    <logo></logo>\n    <tag-nav class=\"nav nav-bottom\"></tag-nav>\n    <cover v-if=\"cover\"></cover>\n  </div>\n</template>\n<script>\nimport Logo from '@/components/logo.vue'\nimport TagNav from '@/components/tagNav.vue'\nimport Cover from '@/components/cover.vue'\nimport Load from '@/components/load.vue'\n\n\nexport default {\n  name: 'app',\n  created() {\n    setTimeout(() => {\n      this.cover = true\n    }, 700)\n    setTimeout(() => {\n      this.loaded = true\n    }, 900)\n    setTimeout(() => {\n      this.finish = true\n    }, 1100)\n\n  },\n  data() {\n    return {\n      msg: 'Welcome!',\n      cover: false,\n      loaded: false,\n      finish: false,\n    }\n  },\n  head: {\n    meta: [\n      // Facebook / Open Graph\n      {\n        property: 'og:title',\n        content: 'Content Title'\n      }, {\n        property: 'og:url',\n        content: 'http://major.hackntu.taipei'\n      }, {\n        property: 'og:type',\n        content: 'website'\n      }, {\n        property: 'og:title',\n        content: '臺大黑客松 HackNTU'\n      }, {\n        property: 'og:description',\n        content: '7/21-23 (花博公園爭艷館)，三天Hacking不間斷！'\n      }, {\n        property: 'og:image',\n        content: '@/assets/preview.png'\n      },\n    ],\n    link: [\n      // Favicon\n      {\n        rel: 'shortcut icon',\n        href: require('@/assets/logo/favicon.png'),\n        sizes: '16x16',\n        type: 'image/png'\n      }, {\n        rel: 'icon',\n        href: require('@/assets/logo/favicon.png'),\n        sizes: '16x16',\n        type: 'image/png'\n      },\n    ],\n  },\n  components: {\n    Logo,\n    TagNav,\n    Cover,\n    Load,\n  },\n}\n</script>\n<style lang=\"scss\">\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  // top: 0;\n  // bottom: 0;\n}\n\na {\n  color: #2c3e50;\n}\n\n// @media style\n$mobile: \"(max-width: 767px)\";\n$tablet: \"(min-width: 768px) and (max-width: 1023px)\";\n$desktop: \"(min-width: 1024px)\";\n.nav {\n  position: relative;\n  &-top {\n    top: calc(50vh - 200px);\n    @media #{$desktop},\n    #{$tablet} {\n      display: none;\n    }\n  }\n  &-bottom {\n    top: calc(50vh + 100px);\n    @media #{$mobile} {\n      display: none;\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?abee8872","<template>\n  <div id=\"cover\">\n    <svg ref=\"svg\"></svg>\n  </div>\n</template>\n<script>\nimport * as d3 from 'd3'\nimport _ from 'lodash'\n\nexport default {\n  name: 'cover',\n  mounted() {\n    d3_init(this.$el)\n  },\n  data() {\n    return {\n      msg: 'Welcome!',\n    }\n  }\n}\n\n\n/*============================\n=            Data            =\n============================*/\n\n\nlet data = _.shuffle([{\n  zh: '資訊安全',\n  en: '（Information Security）'\n}, {\n  zh: '公民參與',\n  en: '（Citizen Participation）'\n}, {\n  zh: '開放資料',\n  en: '（Open Data）'\n}, {\n  zh: '機器學習',\n  en: '（Machine Learning）'\n}, {\n  zh: '社群',\n  en: '（Community）'\n}, {\n  zh: '社會服務',\n  en: '（Social Services）'\n}, {\n  zh: '物聯網',\n  en: '（Internet of Things）'\n}, {\n  zh: '資料分析',\n  en: '（Data Analysis）'\n}, {\n  zh: '消費者',\n  en: '（Consumer）'\n}, {\n  zh: '資料視覺化',\n  en: '（Data Visualization）'\n}, {\n  zh: '數位人文',\n  en: '（Digital Humanities）'\n}, {\n  zh: '人工智慧',\n  en: '（Artificial Intelligence）'\n}, {\n  zh: '虛擬實境',\n  en: '（Virtual Reality）'\n}, {\n  zh: '教育',\n  en: '（Education）'\n}, {\n  zh: '金融',\n  en: '（Finance）'\n}, ])\n\ndata.unshift({\n  zh: '中心',\n  en: '（Center）'\n})\n\n// console.log('data', data)\n\n/*=====  End of Data  ======*/\n\n\nfunction d3_init(el) {\n\n  const svg = d3.select(el).select('svg')\n\n  const color = d3.scaleOrdinal(d3.schemeCategory10)\n\n  let width, height, centerX, centerY\n\n  resetCenter()\n\n  let center = svg\n    .selectAll('g')\n    .data(data)\n    .enter()\n    .filter((d, i) => i === 0)\n    .append('g')\n    .append('circle')\n    .attr('r', 200)\n    .attr('cx', centerX)\n    .attr('cy', centerY)\n    .attr('fill', 'white')\n    // .attr('stroke', 'red')\n\n\n  //draw circles for the nodes\n  let nodes = svg\n    .selectAll('g')\n    .data(data)\n    .enter()\n    .append('g')\n    .filter((d, i) => i !== 0)\n\n\n  let nodeEvents = nodes\n    .on('mouseover', function(d, i) {\n\n      d3.select(this)\n        .selectAll('circle')\n        .transition()\n        // .duration(300)\n        // .ease(d3.easeBackIn, 4)\n        .attr('r', 100)\n        .attr('stroke-dasharray', 18, 2)\n        .style('opacity', 0.03)\n\n\n      d3.select(this)\n        .selectAll('text')\n        .transition()\n        // .duration(500)\n        .style('opacity', 0.4)\n\n    })\n\n  let circles = nodes\n    .append('circle')\n    .attr('r', 20)\n    .attr('cx', centerX)\n    .attr('cy', centerY)\n    // .attr('fill', 'white')\n    .attr('fill', (d, i) => color(i))\n    .style('opacity', 0.08)\n    .attr('stroke', 'gray')\n    .attr('stroke-opacity', 0)\n    // .attr('stroke-width', 2)\n\n\n  function textAttr(t) {\n    t.attr('fill', (d, i) => color(i))\n      .attr('text-anchor', 'middle')\n      .attr('font-size', 14)\n      .style('opacity', 0)\n  }\n\n  let textsZh = nodes\n    .append('text')\n    .text((d) => d.zh)\n    .call(textAttr)\n\n  let textsEn = nodes\n    .append('text')\n    .text((d) => d.en)\n    .call(textAttr)\n\n\n\n  let force = d3\n    .forceSimulation()\n    .nodes(data)\n    .force('charge', d3.forceManyBody()\n      .strength((d, i) => i === 0 ? (-5 * height) : (width * -2))\n      // .strength((d, i) => i === 0 ? (-3000) : (width * -2))\n      // .strength(height * -1.5)\n      // .strength(-2000)\n      // .distanceMax(1000)\n    )\n    .force('center', d3.forceCenter(centerX, centerY))\n    .force('x', d3.forceX())\n    .force('y', d3.forceY())\n    // .alphaTarget(1)\n    // .alphaTarget(0.2)\n    .alphaTarget(0.4)\n    .on('tick', ticked)\n    // .stop()\n\n  function ticked() {\n\n    resetCenter()\n\n    // center\n    //   .attr('x', centerX)\n    //   .attr('y', centerY)\n\n    circles\n      .attr('cx', (d) => d.x)\n      .attr('cy', (d) => d.y)\n\n    textsZh\n      .attr('dx', (d) => d.x)\n      .attr('dy', (d) => d.y - 10)\n\n    textsEn\n      .attr('dx', (d) => d.x)\n      .attr('dy', (d) => d.y + 10)\n\n  }\n\n  function resetCenter() {\n\n    width = window.innerWidth\n    height = window.innerHeight\n    centerX = width / 2\n    centerY = height / 2\n      // centerY = height / 2 - 90\n\n\n  }\n\n\n  // setInterval(() => {\n\n  //   force.restart()\n  //   console.log('interval')\n\n  // }, 1000)\n\n\n  window.addEventListener('resize', function() {\n    window.scrollTo(0, 1);\n    resetCenter()\n    force.force('center', d3.forceCenter(centerX, centerY))\n\n  }, true);\n\n\n\n}\n</script>\n<style lang=\"scss\" scoped>\n#cover {\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  top: 0px;\n  z-index: -1;\n}\n\nsvg {\n  width: 100%;\n  height: 100%;\n}\n\n// @media style\n$mobile: \"(max-width: 767px)\";\n$tablet: \"(min-width: 768px) and (max-width: 1023px)\";\n$desktop: \"(min-width: 1024px)\";\n</style>\n\n\n\n// WEBPACK FOOTER //\n// cover.vue?1866fb7c","<template>\n  <div id=\"load\" :class=\"{loaded:loaded}\">\n    <svg ref=\"svg\"></svg>\n  </div>\n</template>\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'load',\n  mounted() {\n    d3_init(this.$el)\n  },\n  data() {\n    return {\n      msg: 'Welcome!',\n    }\n  },\n  props: ['loaded'],\n}\n\n\nfunction d3_init(el) {\n\n  const svg = d3.select(el).select('svg')\n\n  let width, height, centerX, centerY\n\n  resetCenter()\n\n  function ballAttr(b) {\n    b.attr('r', 5)\n      .attr('cx', centerX)\n      .attr('cy', 0)\n      .attr('stroke-width', 0)\n  }\n\n  let ballp = svg\n    .append('circle')\n    .attr('fill', '#422372')\n    .call(ballAttr)\n\n\n  let ballg = svg\n    .append('circle')\n    .attr('fill', '#00c1bf')\n    .call(ballAttr)\n\n\n  function ballTransition(b, d) {\n    b.transition()\n      .duration(d)\n      .ease(d3.easeBounceOut, 1)\n      .attr('cy', centerY)\n      // .attr('transform', 'scale(1, 0.7)')\n      .transition()\n      .duration(200)\n      .attr('opacity', 0.1)\n      // .attr('r', 10)\n  }\n\n  ballp\n    .call(ballTransition, 700)\n\n\n  ballg\n    .call(ballTransition, 1100)\n\n\n  function resetCenter() {\n\n    width = window.innerWidth\n    height = window.innerHeight\n    centerX = width / 2\n    centerY = height / 2\n\n  }\n\n\n  window.addEventListener('resize', function() {\n    window.scrollTo(0, 1);\n    resetCenter()\n\n  }, true);\n\n\n\n}\n</script>\n<style lang=\"scss\" scoped>\n#load {\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  top: 0px;\n  z-index: 100;\n  background: white;\n  transition: background 0.2s ease-out;\n  &.loaded {\n    background: rgba(0, 0, 0, 0)\n  }\n}\n\nsvg {\n  width: 100%;\n  height: 100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// load.vue?4459b220","<template>\n  <div id=\"logo\">\n    <img src=\"~@/assets/logo/logo-wb-m.png\" alt=\"\">\n    <div id=\"title\">\n      <h2 class=\"en\"> 2017HackNTU </h2>\n      <h2 class=\"zh\"> 臺大黑客松 </h2>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'logo',\n  data() {\n    return {\n      msg: 'Welcome!',\n    }\n  },\n}\n</script>\n<style lang=\"scss\" scoped>\n#logo {\n  img {\n    border-radius: 50%;\n    width: 180px;\n    max-width: 100%;\n  }\n  position: absolute;\n  margin-top: calc(50vh - 190px);\n  left: 50vw;\n  margin-left: -90px;\n  // width: 100%;\n}\n\n#title {\n  height: 100px;\n  > * {\n    margin: 0px;\n    font-size: 1.6em;\n    font-weight: bold;\n    display: block;\n    // display: inline-block;\n  }\n  .en {\n    font-family: initial;\n    letter-spacing: 1.2px;\n  }\n  .zh {\n    // font-family: cursive;\n    font-family: monospace;\n    font-size: 1.8em;\n    letter-spacing: 1px;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// logo.vue?50803c3c","<template>\n  <div id=\"tag-nav\">\n    <ul>\n      <template v-for=\"tag in tags\">\n        <li>\n          <a :href=\"'https://hackntu.tumblr.com/tagged/' + tag.en\">{{tag.zh}}</a>\n        </li>\n      </template>\n    </ul>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'tag-nav',\n  data() {\n    return {\n      msg: 'Welcome!',\n      tags: [{\n        zh: '會前活動',\n        en: 'pre',\n      }, {\n        zh: '活動介紹',\n        en: 'intro',\n      }, {\n        zh: '專欄採訪',\n        en: 'interview',\n      }, {\n        zh: '我要報名',\n        en: 'sign',\n      }, {\n        zh: '合作單位',\n        en: 'partner',\n      }],\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n#tag-nav {\n  ul {\n    padding: 0px;\n  }\n  li {\n    display: inline-block;\n    font-size: 16px;\n    margin: 0px 6px;\n    cursor: pointer;\n    &:after {\n      content: \"\";\n      // position: absolute;\n      display: block;\n      width: 100%;\n      height: 2px;\n      bottom: 0;\n      left: 0;\n      background-color: #555;\n      visibility: hidden;\n      transform: scaleX(0);\n      transition: all 0.3s ease-in-out 0s;\n    }\n    &:hover:after {\n      visibility: visible;\n      transform: scaleX(1);\n    }\n  }\n  // @media style\n  $mobile: \"(max-width: 767px)\";\n  $tablet: \"(min-width: 768px) and (max-width: 1023px)\";\n  $desktop: \"(min-width: 1024px)\";\n  li {\n    @media #{$mobile} {\n      font-size: 12px;\n      margin: 0px 3px;\n    }\n  }\n  a {\n    letter-spacing: 0.4px;\n    font-weight: 500;\n    text-decoration: none;\n    color: hsla(210, 30%, 15%, 1);\n    display: block;\n    opacity: 0.8;\n    @media #{$mobile} {\n      font-weight: 400;\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// tagNav.vue?55c7a646","import Vue from 'vue'\nimport VueHead from 'vue-head'\n\nimport App from './App.vue'\n\nVue.use(VueHead)\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n\n\n\n\n/*----------  js control  ----------*/\n\n// lock screen orientation\n// screen.lockOrientation('portrait'); // it's not work...\n\n\n/*----------  events  ----------*/\n\n// disable touchmove\ndocument.addEventListener(\"touchmove\", function(event) {\n  event.preventDefault();\n}, false);\n\nwindow.addEventListener('resize', function() {\n  window.scrollTo(0, 1);\n}, true);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#cover[data-v-2cf29889]{width:100vw;height:100vh;position:absolute;top:0;z-index:-1}svg[data-v-2cf29889]{width:100%;height:100%}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-2cf29889\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/cover.vue\n// module id = 15\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#logo[data-v-3c6e746e]{position:absolute;margin-top:calc(50vh - 190px);left:50vw;margin-left:-90px}#logo img[data-v-3c6e746e]{border-radius:50%;width:180px;max-width:100%}#title[data-v-3c6e746e]{height:100px}#title>[data-v-3c6e746e]{margin:0;font-size:1.6em;font-weight:700;display:block}#title .en[data-v-3c6e746e]{font-family:initial;letter-spacing:1.2px}#title .zh[data-v-3c6e746e]{font-family:monospace;font-size:1.8em;letter-spacing:1px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3c6e746e\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/logo.vue\n// module id = 16\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#load[data-v-521ea0f8]{width:100vw;height:100vh;position:absolute;top:0;z-index:100;background:#fff;transition:background .2s ease-out}#load.loaded[data-v-521ea0f8]{background:transparent}svg[data-v-521ea0f8]{width:100%;height:100%}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-521ea0f8\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/load.vue\n// module id = 17\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#tag-nav ul[data-v-c3150a72]{padding:0}#tag-nav li[data-v-c3150a72]{display:inline-block;font-size:16px;margin:0 6px;cursor:pointer}#tag-nav li[data-v-c3150a72]:after{content:\\\"\\\";display:block;width:100%;height:2px;bottom:0;left:0;background-color:#555;visibility:hidden;transform:scaleX(0);transition:all .3s ease-in-out 0s}#tag-nav li[data-v-c3150a72]:hover:after{visibility:visible;transform:scaleX(1)}@media (max-width:767px){#tag-nav li[data-v-c3150a72]{font-size:12px;margin:0 3px}}#tag-nav a[data-v-c3150a72]{letter-spacing:.4px;font-weight:500;text-decoration:none;color:#1b2632;display:block;opacity:.8}@media (max-width:767px){#tag-nav a[data-v-c3150a72]{font-weight:400}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-c3150a72\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/tagNav.vue\n// module id = 18\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center}#app,a{color:#2c3e50}.nav{position:relative}.nav-top{top:calc(50vh - 200px)}@media (min-width:768px) and (max-width:1023px),(min-width:1024px){.nav-top{display:none}}.nav-bottom{top:calc(50vh + 100px)}@media (max-width:767px){.nav-bottom{display:none}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-e67de874\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 19\n// module chunks = 0","module.exports = __webpack_public_path__ + \"logo-wb-m.png?36a14a1a47ecf8176a26b815a948f3bc\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/logo/logo-wb-m.png\n// module id = 20\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 21\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2cf29889\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cover.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cover.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2cf29889\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./cover.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-2cf29889\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/cover.vue\n// module id = 22\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-521ea0f8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./load.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./load.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-521ea0f8\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./load.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-521ea0f8\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/load.vue\n// module id = 23\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c6e746e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./logo.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./logo.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3c6e746e\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./logo.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-3c6e746e\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/logo.vue\n// module id = 24\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c3150a72\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./tagNav.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./tagNav.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c3150a72\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./tagNav.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-c3150a72\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tagNav.vue\n// module id = 25\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"cover\"\n    }\n  }, [_c('svg', {\n    ref: \"svg\"\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-2cf29889\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/cover.vue\n// module id = 26\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"logo\"\n    }\n  }, [_c('img', {\n    attrs: {\n      \"src\": require(\"@/assets/logo/logo-wb-m.png\"),\n      \"alt\": \"\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"title\"\n    }\n  }, [_c('h2', {\n    staticClass: \"en\"\n  }, [_vm._v(\" 2017HackNTU \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"zh\"\n  }, [_vm._v(\" 臺大黑客松 \")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-3c6e746e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/logo.vue\n// module id = 27\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: {\n      loaded: _vm.loaded\n    },\n    attrs: {\n      \"id\": \"load\"\n    }\n  }, [_c('svg', {\n    ref: \"svg\"\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-521ea0f8\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/load.vue\n// module id = 28\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"tag-nav\"\n    }\n  }, [_c('ul', [_vm._l((_vm.tags), function(tag) {\n    return [_c('li', [_c('a', {\n      attrs: {\n        \"href\": 'https://hackntu.tumblr.com/tagged/' + tag.en\n      }\n    }, [_vm._v(_vm._s(tag.zh))])])]\n  })], 2)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-c3150a72\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/tagNav.vue\n// module id = 29\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [(!_vm.finish) ? _c('load', {\n    attrs: {\n      \"loaded\": _vm.loaded\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('tag-nav', {\n    staticClass: \"nav nav-top\"\n  }), _vm._v(\" \"), _c('logo'), _vm._v(\" \"), _c('tag-nav', {\n    staticClass: \"nav nav-bottom\"\n  }), _vm._v(\" \"), (_vm.cover) ? _c('cover') : _vm._e()], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-e67de874\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 30\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2cf29889\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cover.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"ce170c22\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-2cf29889\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/cover.vue\n// module id = 31\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c6e746e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./logo.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"cdd7591e\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3c6e746e\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/logo.vue\n// module id = 32\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-521ea0f8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./load.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6f10537d\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-521ea0f8\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/load.vue\n// module id = 33\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c3150a72\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./tagNav.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"c39b2af0\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-c3150a72\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/tagNav.vue\n// module id = 34\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e67de874\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/sass-loader/lib/loader.js!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"f70f0206\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-e67de874\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 35\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 36\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 37\n// module chunks = 0"],"sourceRoot":""}